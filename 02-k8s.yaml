apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
  namespace: backend-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: gcr.io/final-project-413218/backend:v1
        ports:
        - containerPort: 8080
        env:
        - name: JWT_SECRET
          value: "4b8e5678fa4c46d5b5f6a2295d50b224"
        - name: DB_NAME
          value: "la79y"
        - name: DB_USER
          value: "admin"
        - name: DB_PASSWORD
          value: "1234"
        - name: DB_HOST
          value: "postgres-service"
        - name: GCP_CLIENT_ID
          value: "<GCP_CLIENT_ID>"
        - name: GCP_CLIENT_SECRET
          value: "<GCP_CLIENT_SECRET>"
        - name: GCP_REFRESH_TOKEN
          value: "<GCP_REFRESH_TOKEN>"
        - name: WEB_PROTO
          value: "http"
        - name: WEB_HOST
          value: "localhost"
        - name: WEB_PORT
          value: "3000"
        resources:
          requests:
            memory: "30Mi"
            cpu: "5m"
          limits:
            memory: "30Mi"
            cpu: "5m"
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: backend-namespace
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
  - name: http
    port: 443
    targetPort: 8080
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
  namespace: backend-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "la79y"
        - name: POSTGRES_USER
          value: "admin"
        - name: POSTGRES_PASSWORD
          value: "1234"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: backend-namespace
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: backend-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
